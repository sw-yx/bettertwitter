{"remainingRequest":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-typescript\",[\"@babel/preset-env\",{\"targets\":{\"node\":\"6.10.3\"}}],[\"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-transform-object-assign\",\"@babel/plugin-proposal-object-rest-spread\",[\"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/react-docgen-typescript-loader/dist/index.js?{}!/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/InputField/index.tsx","dependencies":[{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/InputField/index.tsx","mtime":1546008102390},{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1545967668461},{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/babel-loader/lib/index.js","mtime":1541447428977},{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1545967668721}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/InputField/index.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    padding: 10px;\\n    display: block;\\n    border: 1px solid \", \";\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React from 'react';\nimport styled from 'styled-components';\nexport var FilterTypes;\n\n(function (FilterTypes) {\n  FilterTypes[\"media\"] = \"media\";\n  FilterTypes[\"images\"] = \"images\";\n  FilterTypes[\"vine\"] = \"vine\";\n  FilterTypes[\"native_video\"] = \"native_video\";\n  FilterTypes[\"periscope\"] = \"periscope\";\n  FilterTypes[\"news\"] = \"news\";\n  FilterTypes[\"links\"] = \"links\";\n  FilterTypes[\"safe\"] = \"safe\";\n  FilterTypes[\"verified\"] = \"verified\";\n  FilterTypes[\"retweets\"] = \"retweets\";\n})(FilterTypes || (FilterTypes = {}));\n\n/**\n * Filter field\n */\nexport default function InputField(props) {\n  var fieldState = props.fieldState,\n      filterType = props.filterType,\n      _props$label = props.label,\n      label = _props$label === void 0 ? '' : _props$label,\n      children = props.children;\n  var fieldStateColor = {\n    inactive: 'grey',\n    filterFor: 'green',\n    filterOut: 'red'\n  }[fieldState];\n  var Styled = styled.label(_templateObject(), fieldStateColor);\n  return React.createElement(Styled, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, label, \"filter: \", filterType, children);\n}\n\ntry {\n  // @ts-ignore\n  InputField.displayName = \"InputField\"; // @ts-ignore\n\n  InputField.__docgenInfo = {\n    \"description\": \"Filter field\",\n    \"displayName\": \"InputField\",\n    \"props\": {\n      \"label\": {\n        \"defaultValue\": {\n          value: \"''\"\n        },\n        \"description\": \"Description of prop \\\"foo\\\".\",\n        \"name\": \"label\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"fieldState\": {\n        \"defaultValue\": null,\n        \"description\": \"state of the inputfield\",\n        \"name\": \"fieldState\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"\\\"inactive\\\" | \\\"filterFor\\\" | \\\"filterOut\\\"\"\n        }\n      },\n      \"filterType\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"filterType\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"FilterTypes\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/InputField/index.tsx#InputField\"] = {\n      docgenInfo: InputField.__docgenInfo,\n      name: \"InputField\",\n      path: \"src/components/InputField/index.tsx#InputField\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(InputField, \"InputField\", \"/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/InputField/index.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/InputField/index.tsx"],"names":["React","styled","FilterTypes","InputField","props","fieldState","filterType","label","children","fieldStateColor","inactive","filterFor","filterOut","Styled","displayName","__docgenInfo","value","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAwBZ;;;AAGA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAAoC;AAAA,MACzCC,UADyC,GACQD,KADR,CACzCC,UADyC;AAAA,MAC7BC,UAD6B,GACQF,KADR,CAC7BE,UAD6B;AAAA,qBACQF,KADR,CACjBG,KADiB;AAAA,MACjBA,KADiB,6BACT,EADS;AAAA,MACLC,QADK,GACQJ,KADR,CACLI,QADK;AAEjD,MAAMC,eAAuB,GAAG;AAC9BC,IAAAA,QAAQ,EAAE,MADoB;AAE9BC,IAAAA,SAAS,EAAE,OAFmB;AAG9BC,IAAAA,SAAS,EAAE;AAHmB,IAI9BP,UAJ8B,CAAhC;AAKA,MAAMQ,MAAM,GAAGZ,MAAM,CAACM,KAAV,oBAGUE,eAHV,CAAZ;AAMA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KADH,cAGWD,UAHX,EAIGE,QAJH,CADF;AAQD;;AACD,IAAI;AACA;AACAL,EAAAA,UAAU,CAACW,WAAX,GAAyB,YAAzB,CAFA,CAGA;;AACAX,EAAAA,UAAU,CAACY,YAAX,GAA0B;AAAE,mBAAe,cAAjB;AAAiC,mBAAe,YAAhD;AAA8D,aAAS;AAAE,eAAS;AAAE,wBAAgB;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAlB;AAAmC,uBAAe,8BAAlD;AAAkF,gBAAQ,OAA1F;AAAmG,oBAAY,KAA/G;AAAsH,gBAAQ;AAAE,kBAAQ;AAAV;AAA9H,OAAX;AAAiK,oBAAc;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,yBAAvC;AAAkE,gBAAQ,YAA1E;AAAwF,oBAAY,IAApG;AAA0G,gBAAQ;AAAE,kBAAQ;AAAV;AAAlH,OAA/K;AAA+V,oBAAc;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,YAAnD;AAAiE,oBAAY,IAA7E;AAAmF,gBAAQ;AAAE,kBAAQ;AAAV;AAA3F;AAA7W;AAAvE,GAA1B,CAJA,CAKA;;AACA,MAAI,OAAOC,uBAAP,KAAmC,WAAvC,EACI;AACAA,IAAAA,uBAAuB,CAAC,gDAAD,CAAvB,GAA4E;AAAEC,MAAAA,UAAU,EAAEf,UAAU,CAACY,YAAzB;AAAuCI,MAAAA,IAAI,EAAE,YAA7C;AAA2DC,MAAAA,IAAI,EAAE;AAAjE,KAA5E;AACP,CATD,CAUA,OAAOC,sCAAP,EAA+C,CAAG;;;;;;;;;;;;;0BAhC1BlB,U","sourcesContent":["import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport enum FilterTypes {\n  media = 'media',\n  images = 'images',\n  vine = 'vine',\n  native_video = 'native_video',\n  periscope = 'periscope',\n  news = 'news',\n  links = 'links',\n  safe = 'safe',\n  verified = 'verified',\n  retweets = 'retweets'\n}\n\ninterface MyProps {\n  /** Description of prop \"foo\".\n   * @default ''\n   * */\n  label?: string;\n  /** state of the inputfield */\n  fieldState: 'inactive' | 'filterFor' | 'filterOut';\n  filterType: FilterTypes;\n  children?: ReactNode;\n}\n\n/**\n * Filter field\n */\nexport default function InputField(props: MyProps) {\n  const { fieldState, filterType, label = '', children } = props;\n  const fieldStateColor: string = {\n    inactive: 'grey',\n    filterFor: 'green',\n    filterOut: 'red'\n  }[fieldState];\n  const Styled = styled.label`\n    padding: 10px;\n    display: block;\n    border: 1px solid ${fieldStateColor};\n  `;\n\n  return (\n    <Styled>\n      {label}\n      {/* <input disabled={fieldState == 'inactive'} /> */}\n      filter: {filterType}\n      {children}\n    </Styled>\n  );\n}\ntry {\n    // @ts-ignore\n    InputField.displayName = \"InputField\";\n    // @ts-ignore\n    InputField.__docgenInfo = { \"description\": \"Filter field\", \"displayName\": \"InputField\", \"props\": { \"label\": { \"defaultValue\": { value: \"''\" }, \"description\": \"Description of prop \\\"foo\\\".\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"fieldState\": { \"defaultValue\": null, \"description\": \"state of the inputfield\", \"name\": \"fieldState\", \"required\": true, \"type\": { \"name\": \"\\\"inactive\\\" | \\\"filterFor\\\" | \\\"filterOut\\\"\" } }, \"filterType\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"filterType\", \"required\": true, \"type\": { \"name\": \"FilterTypes\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/InputField/index.tsx#InputField\"] = { docgenInfo: InputField.__docgenInfo, name: \"InputField\", path: \"src/components/InputField/index.tsx#InputField\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}