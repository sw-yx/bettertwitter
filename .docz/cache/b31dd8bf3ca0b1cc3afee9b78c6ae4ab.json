{"remainingRequest":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-typescript\",[\"@babel/preset-env\",{\"targets\":{\"node\":\"6.10.3\"}}],[\"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-transform-object-assign\",\"@babel/plugin-proposal-object-rest-spread\",[\"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/react-docgen-typescript-loader/dist/index.js?{}!/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/OrComponent/index.tsx","dependencies":[{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/OrComponent/index.tsx","mtime":1546060045386},{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1545967668461},{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/babel-loader/lib/index.js","mtime":1541447428977},{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1545967668721}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/OrComponent/index.tsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 10px;\\n  display: inline-flex;\\n  border: 1px solid\\n    \", \";\\n  color: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport React from 'react';\nimport styled from 'styled-components';\nexport var FilterTypes;\n\n(function (FilterTypes) {\n  FilterTypes[\"media\"] = \"media\";\n  FilterTypes[\"images\"] = \"images\";\n  FilterTypes[\"vine\"] = \"vine\";\n  FilterTypes[\"native_video\"] = \"native_video\";\n  FilterTypes[\"periscope\"] = \"periscope\";\n  FilterTypes[\"news\"] = \"news\";\n  FilterTypes[\"links\"] = \"links\";\n  FilterTypes[\"safe\"] = \"safe\";\n  FilterTypes[\"verified\"] = \"verified\";\n  FilterTypes[\"retweets\"] = \"retweets\";\n})(FilterTypes || (FilterTypes = {}));\n\nvar Styled = styled.div(_templateObject(), function (props) {\n  return props.fieldStateColor;\n}, function (props) {\n  return props.fieldStateColor;\n});\nvar StateMachine = {\n  inactive: 'filterFor',\n  filterFor: 'filterOut',\n  filterOut: 'inactive'\n};\n/**\n * Filter field\n */\n\nexport default function FilterField(props) {\n  var fieldState = props.fieldState,\n      filterType = props.filterType,\n      _props$label = props.label,\n      label = _props$label === void 0 ? '' : _props$label,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? function () {} : _props$onChange,\n      children = props.children;\n  var fieldStateColor = {\n    inactive: 'grey',\n    filterFor: 'lightgreen',\n    filterOut: 'red'\n  }[fieldState];\n  var emoji = {\n    inactive: '☐',\n    filterFor: '✓',\n    filterOut: '✖'\n  }[fieldState];\n\n  var onClick = function onClick() {\n    return onChange(StateMachine[fieldState]);\n  };\n\n  return React.createElement(Styled, {\n    fieldStateColor: fieldStateColor,\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, label, React.createElement(\"span\", {\n    style: {\n      width: '2rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, emoji), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, filterType), children);\n}\n\ntry {\n  // @ts-ignore\n  OrComponent.displayName = \"OrComponent\"; // @ts-ignore\n\n  OrComponent.__docgenInfo = {\n    \"description\": \"Filter field\",\n    \"displayName\": \"OrComponent\",\n    \"props\": {\n      \"label\": {\n        \"defaultValue\": {\n          value: \"''\"\n        },\n        \"description\": \"Label for filter\",\n        \"name\": \"label\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"fieldState\": {\n        \"defaultValue\": null,\n        \"description\": \"State of the inputfield\",\n        \"name\": \"fieldState\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"\\\"inactive\\\" | \\\"filterFor\\\" | \\\"filterOut\\\"\"\n        }\n      },\n      \"filterType\": {\n        \"defaultValue\": null,\n        \"description\": \"The valid boolean filter types from Twitter\",\n        \"name\": \"filterType\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"FilterTypes\"\n        }\n      },\n      \"onChange\": {\n        \"defaultValue\": null,\n        \"description\": \"I will pass you the next state which you can set to fieldState\",\n        \"name\": \"onChange\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(value: string) => void\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/OrComponent/index.tsx#OrComponent\"] = {\n      docgenInfo: OrComponent.__docgenInfo,\n      name: \"OrComponent\",\n      path: \"src/components/OrComponent/index.tsx#OrComponent\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Styled, \"Styled\", \"/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/OrComponent/index.tsx\");\n  reactHotLoader.register(StateMachine, \"StateMachine\", \"/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/OrComponent/index.tsx\");\n  reactHotLoader.register(FilterField, \"FilterField\", \"/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/OrComponent/index.tsx\");\n  leaveModule(module);\n})();\n\n;",{"version":3,"sources":["/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/OrComponent/index.tsx"],"names":["React","styled","FilterTypes","Styled","div","props","fieldStateColor","StateMachine","inactive","filterFor","filterOut","FilterField","fieldState","filterType","label","onChange","children","emoji","onClick","width","OrComponent","displayName","__docgenInfo","value","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport enum FilterTypes {\n  media = 'media',\n  images = 'images',\n  vine = 'vine',\n  native_video = 'native_video',\n  periscope = 'periscope',\n  news = 'news',\n  links = 'links',\n  safe = 'safe',\n  verified = 'verified',\n  retweets = 'retweets'\n}\n\ninterface MyProps {\n  /** Label for filter\n   * @default ''\n   * */\n  label?: string;\n  /** State of the inputfield */\n  fieldState: 'inactive' | 'filterFor' | 'filterOut';\n  /** The valid boolean filter types from Twitter */\n  filterType: FilterTypes;\n  /** I will pass you the next state which you can set to fieldState */\n  onChange?: (value: string) => void;\n  children?: ReactNode;\n}\n\nconst Styled = styled.div`\n  padding: 10px;\n  display: inline-flex;\n  border: 1px solid\n    ${(props: { fieldStateColor: string }) => props.fieldStateColor};\n  color: ${(props: { fieldStateColor: string }) => props.fieldStateColor};\n`;\n\nconst StateMachine = {\n  inactive: 'filterFor',\n  filterFor: 'filterOut',\n  filterOut: 'inactive'\n};\n\n/**\n * Filter field\n */\nexport default function FilterField(props: MyProps) {\n  const {\n    fieldState,\n    filterType,\n    label = '',\n    onChange = () => {},\n    children\n  } = props;\n  const fieldStateColor: string = {\n    inactive: 'grey',\n    filterFor: 'lightgreen',\n    filterOut: 'red'\n  }[fieldState];\n  const emoji: string = {\n    inactive: '☐',\n    filterFor: '✓',\n    filterOut: '✖'\n  }[fieldState];\n\n  const onClick = () => onChange(StateMachine[fieldState]);\n  return (\n    <Styled fieldStateColor={fieldStateColor} onClick={onClick}>\n      {label}\n      <span style={{ width: '2rem' }}>{emoji}</span>\n      <span>{filterType}</span>\n      {children}\n    </Styled>\n  );\n}\ntry {\n    // @ts-ignore\n    OrComponent.displayName = \"OrComponent\";\n    // @ts-ignore\n    OrComponent.__docgenInfo = { \"description\": \"Filter field\", \"displayName\": \"OrComponent\", \"props\": { \"label\": { \"defaultValue\": { value: \"''\" }, \"description\": \"Label for filter\", \"name\": \"label\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"fieldState\": { \"defaultValue\": null, \"description\": \"State of the inputfield\", \"name\": \"fieldState\", \"required\": true, \"type\": { \"name\": \"\\\"inactive\\\" | \\\"filterFor\\\" | \\\"filterOut\\\"\" } }, \"filterType\": { \"defaultValue\": null, \"description\": \"The valid boolean filter types from Twitter\", \"name\": \"filterType\", \"required\": true, \"type\": { \"name\": \"FilterTypes\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"I will pass you the next state which you can set to fieldState\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(value: string) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/OrComponent/index.tsx#OrComponent\"] = { docgenInfo: OrComponent.__docgenInfo, name: \"OrComponent\", path: \"src/components/OrComponent/index.tsx#OrComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}