{"remainingRequest":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/babel-loader/lib/index.js?{\"presets\":[\"@babel/preset-typescript\",[\"@babel/preset-env\",{\"targets\":{\"node\":\"6.10.3\"}}],[\"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[\"@babel/plugin-proposal-class-properties\",\"@babel/plugin-transform-object-assign\",\"@babel/plugin-proposal-object-rest-spread\",[\"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/react-docgen-typescript-loader/dist/index.js?{}!/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/OrContainer/index.tsx","dependencies":[{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/OrContainer/index.tsx","mtime":1546060333905},{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1545967668461},{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/babel-loader/lib/index.js","mtime":1541447428977},{"path":"/Users/swyx/Work/betterTwitter/create-react-app-lambda/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1545967668721}],"contextDependencies":[],"result":["// import React, { ReactNode } from 'react';\n// import styled from 'styled-components';\n// interface MyProps {\n//   /** Label for filter\n//    * @default ''\n//    * */\n//   label?: string;\n//   /** I will pass you the next state which you can set to fieldState */\n//   onChange?: (value: string) => void;\n//   children?: ReactNode;\n// }\n// const Styled = styled.div`\n//   padding: 10px;\n//   display: inline-grid;\n//   grid-gap: 10px;\n//   border: 1px solid green;\n// `;\n// /**\n//  * Filter field\n//  */\n// export default function FilterField(props: MyProps) {\n//   const { label = '', onChange = () => {}, children } = props;\n//   const onClick = () => onChange();\n//   return (\n//     <Styled>\n//       {label}\n//       <span style={{ width: '2rem' }}>{emoji}</span>\n//       <span>{filterType}</span>\n//       {children}\n//     </Styled>\n//   );\n// }",{"version":3,"sources":["/Users/swyx/Work/betterTwitter/create-react-app-lambda/src/components/OrContainer/index.tsx"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { ReactNode } from 'react';\n// import styled from 'styled-components';\n\n// interface MyProps {\n//   /** Label for filter\n//    * @default ''\n//    * */\n//   label?: string;\n//   /** I will pass you the next state which you can set to fieldState */\n//   onChange?: (value: string) => void;\n//   children?: ReactNode;\n// }\n\n// const Styled = styled.div`\n//   padding: 10px;\n//   display: inline-grid;\n//   grid-gap: 10px;\n//   border: 1px solid green;\n// `;\n\n// /**\n//  * Filter field\n//  */\n// export default function FilterField(props: MyProps) {\n//   const { label = '', onChange = () => {}, children } = props;\n\n//   const onClick = () => onChange();\n//   return (\n//     <Styled>\n//       {label}\n//       <span style={{ width: '2rem' }}>{emoji}</span>\n//       <span>{filterType}</span>\n//       {children}\n//     </Styled>\n//   );\n// }\n"]}]}